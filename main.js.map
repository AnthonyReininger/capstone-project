{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/base.component.ts","webpack:///./src/app/employer/employer.component.css","webpack:///./src/app/employer/employer.component.html","webpack:///./src/app/employer/employer.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/job-listing/job-listing.component.html","webpack:///./src/app/job-listing/job-listing.component.ts","webpack:///./src/app/job-listing/job-listings.component.html","webpack:///./src/app/job-listing/job-listings.component.ts","webpack:///./src/app/models/job.ts","webpack:///./src/app/models/question.ts","webpack:///./src/app/models/user.ts","webpack:///./src/app/question-forum/question-form.component.html","webpack:///./src/app/question-forum/question-form.component.ts","webpack:///./src/app/question-forum/question-forum.component.css","webpack:///./src/app/question-forum/question-forum.component.html","webpack:///./src/app/question-forum/question-forum.component.ts","webpack:///./src/app/services/authentication.guard.ts","webpack:///./src/app/services/authentication.service.ts","webpack:///./src/app/services/jobs.service.ts","webpack:///./src/app/services/questions.service.ts","webpack:///./src/app/users/login-form.component.html","webpack:///./src/app/users/login-form.component.ts","webpack:///./src/app/users/register-form.component.html","webpack:///./src/app/users/register-form.component.ts","webpack:///./src/app/users/user.component.html","webpack:///./src/app/users/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmployerComponent } from './employer/employer.component';\nimport { JobsComponent } from './job-listing/job-listings.component';\nimport { QuestionForumComponent } from './question-forum/question-forum.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginFormComponent } from './users/login-form.component';\nimport { RegisterFormComponent } from './users/register-form.component';\nimport { QuestionFormComponent } from './question-forum/question-form.component';\n\nconst routes: Routes = [ \n{ path: '', redirectTo: '/home', pathMatch: 'full' },\n{path: 'home/employer', component: EmployerComponent},\n{path: 'home/job_listings', component: JobsComponent},\n{path: 'home/question_forum', component: QuestionForumComponent},\n{path: 'home/questions', component: QuestionFormComponent}, \n{path: 'home', component: HomeComponent},\n{path: 'login', component: LoginFormComponent},\n{path: 'register', component: RegisterFormComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".active{\\n    color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hY3RpdmV7XG4gICAgY29sb3I6IHJlZDtcbn0iXX0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<!--   <div class=\\\"container-fluid\\\">-->\\n    <header>\\n   <auth-el></auth-el>\\n    <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n        <img src=\\\"../assets/Weber Logo.png\\\" alt=\\\"Weber State\\\">\\n        <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarText\\\" aria-controls=\\\"navbarText\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n          <span class=\\\"navbar-toggler-icon\\\"></span>\\n        </button>\\n        <div class=\\\"collapse navbar-collapse\\\" style=\\\"margin-left: 500px\\\" id=\\\"navbarText\\\">\\n         \\n          <span class=\\\"navbar-text\\\">\\n            <ul class=\\\"navbar-nav mr-auto my-2 my-lg-0\\\">\\n              <li class=\\\"topnav home nav-item\\\" >\\n                <a class=\\\"nav-link\\\"  routerLink=\\\"/home\\\" routerLinkActive=\\\"activate\\\"\\n                [routerLinkActiveOptions]=\\\"{ exact: true }\\\" >Home </a>\\n              </li>\\n              <li class=\\\"topnav nav-item\\\">\\n              <a class=\\\"nav-link\\\"  routerLink=\\\"/home/employer\\\" routerLinkActive=\\\"activate\\\">Employer</a>\\n              </li>\\n              <li class=\\\"topnav nav-item\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/home/job_listings\\\" routerLinkActive=\\\"activate\\\">Jobs</a>\\n              </li>\\n              <li class=\\\"topnav nav-item\\\">\\n                  <a class=\\\"nav-link\\\" routerLink=\\\"/home/question_forum\\\" routerLinkActive=\\\"activate\\\">Questions</a>\\n                </li>\\n            </ul>\\n          </span>\\n        </div>\\n      </nav>\\n    </header>\\n   \\n   <div class=\\\"banner\\\"></div>\\n   \\n   <div class=\\\"colorBar text-center row2\\\">\\n       <div class=\\\"row acitve\\\">\\n        \\n            <div class=\\\"col-sm-4\\\">\\n                <a  routerLink=\\\"/home/employer\\\" routerLinkActive=\\\"active\\\">\\n                <i class=\\\"fas fa-handshake fa-3x\\\"></i>\\n                <p>Employer</p>\\n                </a>\\n            </div>\\n    \\n            <div class=\\\"col-sm-4\\\">\\n                <a routerLink=\\\"/home/job_listings\\\" routerLinkActive=\\\"active\\\">\\n                <i class=\\\"fas fa-clipboard-check fa-3x\\\"></i>\\n                <p>Apply to Jobs</p>\\n                </a>\\n            </div>\\n            <div class=\\\"col-sm-4\\\">\\n                <a routerLink=\\\"/home/question_forum\\\" routerLinkActive=\\\"active\\\">\\n                <i class=\\\"fas fa-question fa-3x\\\"></i>\\n                <p>Questions Forum</p>\\n                </a>\\n            </div>\\n        </div>\\n   </div>\\n   <router-outlet></router-outlet>\\n\\n   \\n   <footer class=\\\"page-footer fixed-bottom pt-2 pb-2\\\">\\n     <div class=\\\"footer-copyright\\\">\\n        &copy; 2019 Copyright:\\n        <a href=\\\"\\\">Capstone</a> \\n     </div>\\n\\n  </footer>\\n   \\n  \\n    \\n    \\n    \\n    \\n    \\n<!--</div>-->\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  styles: [`\n  .active   {\n    color: #fff !important;\n  \n  }\n  .activate   {\n    color: #492365 !important;\n    border-bottom: #492365 solid 1px;\n  }\n`],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'capstone';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { QuestionForumComponent } from './question-forum/question-forum.component';\nimport { EmployerComponent } from './employer/employer.component';\nimport { HomeComponent } from './home/home.component';\nimport { UserComponent } from './users/user.component';\nimport { AuthenticationGaurd } from './services/authentication.guard';\nimport { LoginFormComponent } from './users/login-form.component';\nimport { RegisterFormComponent } from './users/register-form.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ToastrModule } from 'ngx-toastr';\nimport { FormsModule } from '@angular/forms';\nimport { JobsComponent } from './job-listing/job-listings.component';\nimport { JobComponent } from './job-listing/job-listing.component';\nimport { QuestionFormComponent } from './question-forum/question-form.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuestionForumComponent,\n    JobComponent,\n    EmployerComponent,\n    HomeComponent,\n    UserComponent,\n    LoginFormComponent,\n    RegisterFormComponent,\n    JobsComponent,\n    QuestionFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    ToastrModule.forRoot()\n  ],\n  providers: [AuthenticationGaurd],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { AuthenticationService } from './services/authentication.service';\n\nexport class BaseComponent{\n    get loggedIn(){\n        return AuthenticationService.isAuthenticated()\n    }\n\n    get notLoggedIn(){\n        return !this.loggedIn\n    }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVyL2VtcGxveWVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!-- \\n  <div class=\\\"row\\\">\\n     <h2 class=\\\"text-center col-12\\\">\\n        <span class=\\\"underline\\\">Employer Application</span>\\n     </h2>\\n     <br>\\n     <br>\\n     <br>\\n     <div class=\\\"text-center col-3\\\"></div>\\n     <div class=\\\"text-center col-6\\\">\\n        <form>\\n           <div class=\\\"form-group\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleFormControlInput1\\\" placeholder=\\\"Company\\\">\\n           </div>\\n           <div class=\\\"form-group\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleFormControlInput1\\\" placeholder=\\\"Location\\\">\\n           </div>\\n           <div class=\\\"form-group\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleFormControlInput1\\\" placeholder=\\\"Job Title\\\">\\n           </div>\\n           <div class=\\\"form-group\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleFormControlInput1\\\" placeholder=\\\"Part/Full/Inten\\\">\\n           </div>\\n           <div class=\\\"form-group\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleFormControlInput1\\\" placeholder=\\\"Pay\\\">\\n           </div>\\n           <div class=\\\"form-group\\\">\\n              <textarea class=\\\"form-control\\\" id=\\\"exampleFormControlTextarea1\\\" rows=\\\"3\\\" placeholder=\\\"Description\\\"></textarea>\\n           </div>\\n           <div class=\\\"form-group\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleFormControlInput1\\\" placeholder=\\\"Link to job site\\\">\\n           </div>\\n          \\n           <br>\\n           <div class=\\\"form-group\\\">\\n               <button type=\\\"submit\\\" class=\\\"btn btn-primary mb-2\\\">Submit</button>\\n           </div>\\n        </form>\\n     </div>\\n  </div> -->\\n\\n  <h2>Employer Application</h2>\\n<form>\\n  <div class=\\\"form-group row\\\">\\n    <label for=\\\"etitle\\\" class=\\\"col-sm-2 col-form-label\\\">Title</label>\\n    <div class=\\\"col-sm-10\\\">\\n      <input type=\\\"text\\\" required minlength=\\\"5\\\" maxlength=\\\"60\\\" class=\\\"form-control\\\" name=\\\"title\\\" id=\\\"etitle\\\" [(ngModel)]=\\\"job.title\\\" #title=\\\"ngModel\\\">\\n      <!-- <div class=\\\"invalid-feedback\\\" [hidden]=\\\"title.valid || title.pristine\\\">\\n        Please enter a title.\\n      </div> -->\\n    </div>\\n  </div>\\n  <div class=\\\"form-group row\\\">\\n    <label for=\\\"ecompany_name\\\" class=\\\"col-sm-2 col-form-label\\\">Company Name</label>\\n    <div class=\\\"col-sm-10\\\">\\n      <input type=\\\"text\\\" required class=\\\"form-control\\\" name=\\\"company_name\\\" id=\\\"ecompany_name\\\" [(ngModel)]=\\\"job.company_name\\\" #author=\\\"ngModel\\\">\\n      <!-- <div class=\\\"invalid-feedback\\\" [hidden]=\\\"company_name.valid || company_name.pristine\\\">\\n        Please ener an author.\\n      </div> -->\\n    </div>\\n  </div>\\n  <div class=\\\"form-group row\\\">\\n    <label for=\\\"elocation\\\" class=\\\"col-sm-2 col-form-label\\\">Location</label>\\n    <div class=\\\"col-sm-10\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Location\\\" id=\\\"elocation\\\" [(ngModel)]=\\\"job.location\\\" >\\n      <!-- <div class=\\\"invalid-feedback\\\" >\\n        Please enter a valid URL for the poster.\\n      </div> -->\\n    </div>\\n  </div>\\n  <div class=\\\"form-group row\\\">\\n    <label for=\\\"etype\\\" class=\\\"col-sm-2 col-form-label\\\">Type</label>\\n    <div class=\\\"col-sm-10\\\">\\n      <input type=\\\"text\\\" required class=\\\"form-control\\\" name=\\\"type\\\" id=\\\"etype\\\"  [(ngModel)]=\\\"job.type\\\" #isbn=\\\"ngModel\\\">\\n      <!-- <div class=\\\"invalid-feedback\\\" [hidden]=\\\"type.valid || type.pristine\\\">\\n        Please enter an isbn\\n      </div> -->\\n    </div>\\n  </div>\\n  <div class=\\\"form-group row\\\">\\n    <label for=\\\"edescription\\\" class=\\\"col-sm-2 col-form-label\\\">Description</label>\\n    <div class=\\\"col-sm-10\\\">\\n      <textarea name=\\\"description\\\" required id=\\\"edescription\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"job.description\\\" #synopsis=\\\"ngModel\\\"></textarea>\\n      <!-- <div class=\\\"invalid-feedback\\\" [hidden]=\\\"description.valid || description.pristine\\\">\\n        Please enter a synopsis.\\n      </div> -->\\n    </div>\\n  </div>\\n  <div class=\\\"form-group row\\\">\\n   <label for=\\\"epay\\\" class=\\\"col-sm-2 col-form-label\\\">Pay</label>\\n   <div class=\\\"col-sm-10\\\">\\n      <input type=\\\"text\\\" required minlength=\\\"5\\\" maxlength=\\\"60\\\" class=\\\"form-control\\\" name=\\\"pay\\\" id=\\\"epay\\\" [(ngModel)]=\\\"job.pay\\\" #title=\\\"ngModel\\\">\\n     <!-- <div class=\\\"invalid-feedback\\\" [hidden]=\\\"pay.valid || pay.pristine\\\">\\n       Please enter a synopsis.\\n     </div> -->\\n   </div>\\n </div>\\n <div class=\\\"form-group row\\\">\\n   <label for=\\\"eURL\\\" class=\\\"col-sm-2 col-form-label\\\">Link to job</label>\\n   <div class=\\\"col-sm-10\\\">\\n      <input type=\\\"text\\\" required minlength=\\\"5\\\" maxlength=\\\"60\\\" class=\\\"form-control\\\" name=\\\"URL\\\" id=\\\"eURL\\\" [(ngModel)]=\\\"job.URL\\\" #title=\\\"ngModel\\\">\\n     <!-- <div class=\\\"invalid-feedback\\\" [hidden]=\\\"URL.valid || URL.pristine\\\">\\n       Please enter a synopsis.\\n     </div> -->\\n   </div>\\n </div>\\n\\n\\n\\n\\n\\n\\n\\n  <div class=\\\"form-group row\\\">\\n      <label for=\\\"\\\" class=\\\"col-sm-2 col-form-label\\\"></label>\\n      <div class=\\\"col-sm-10\\\" style=\\\"margin-bottom: 100px;\\\">\\n        <button type=\\\"submit\\\" (click)=\\\"onCreate(job)\\\" class=\\\"btn btn-primary\\\" routerLink=\\\"/home\\\">Submit</button>&nbsp;\\n        <button class=\\\"btn btn-secondary\\\" routerLink=\\\"/home\\\">Cancel</button>\\n      </div>\\n    </div>\\n</form>\\n\\n \"","import { Component, OnInit, Output } from '@angular/core';\nimport { Job } from '../models/job';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { JobsService } from '../services/jobs.service';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { EventEmitter } from 'events';\n\n@Component({\n  templateUrl: './employer.component.html',\n  styleUrls: ['./employer.component.css']\n})\nexport class EmployerComponent implements OnInit {\n  job: Job = new Job()\n  //@Output() createJob= new EventEmitter<Job>();\n  constructor(private jobsService: JobsService, \n    private route : ActivatedRoute, \n    private router : Router, private toastr : ToastrService) { }\n\n  ngOnInit() {\n    let bid = this.route.snapshot.params['id']\n    if(bid !== undefined){\n      this.jobsService.getJob(bid).subscribe( orig => Object.assign(this.job, orig))\n    }\n  }\n  onCreate(job: Job): void {\n    this.jobsService.createJob(job).subscribe(res => {\n      console.log(job)\n      this.router.navigate(['/home'])\n      //this.createJob.emit(job);\n    });\n  }\n\n  // onSubmit(f: NgForm){\n  //   if(f.valid){\n  //     if(true){\n  //       this.jobsService.createJob(this.job).subscribe(res => {\n  //         this.job = res\n  //         this.toastr.success(\"The job was successfully created.\")\n  //         console.log(this.job)\n  //       })\n  //     }else{\n  //       this.jobsService.updateJob(this.job).subscribe(res => {\n  //         this.job = res\n  //         this.toastr.success(\"The job was successfully updated.\")\n  //         console.log(this.job)\n  //       })\n  //     }\n\n      //this.router.navigate(['/home'])\n     // } else {\n    //   for(let c in f.controls){\n    //     f.controls[c].markAsDirty()\n    //   }\n    // }\n  //}\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"sections\\\">\\n    <div class=\\\"row\\\">\\n        <h2 class=\\\"text-center col-12\\\">\\n            <span class=\\\"underline\\\">Most Recent Job Posts</span>\\n        </h2>\\n        <br>\\n        <br>\\n\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-4\\\"></div>\\n        <div class=\\\"text-center col-4\\\">\\n            <h5>Title:</h5>\\n            <p>{{ jobs[jobs.length - 1].title}} <br></p>\\n            <h5>Description:</h5>\\n            <p>{{ jobs[jobs.length - 1].description}} <br></p>\\n            <h5>Comany Name:</h5>\\n            <p>{{ jobs[jobs.length - 1].company_name}} <br></p>\\n            <h5>Pay:</h5>\\n            <p>{{ jobs[jobs.length - 1].pay}} <br></p>\\n            <h5>Type:</h5>\\n            <p>{{ jobs[jobs.length - 1].type}} <br></p>\\n            <h5>URL:</h5>\\n            <p>{{ jobs[jobs.length - 1].URL}} <br></p>\\n            <h5>Location:</h5>\\n            <p>{{ jobs[jobs.length - 1].location}} <br></p>\\n        </div>\\n        <div class=\\\"col-4\\\"></div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row employer \\\">\\n    <div class=\\\"col-sm-12 text-center\\\">\\n        <h2>\\n            <span class=\\\"underline2\\\">\\n                Employers\\n            </span>\\n        </h2>\\n\\n        <p>\\n            If your company is looking for full time, part time, or internship positions,\\n        </p>\\n\\n        <p>submit your application here and we will take care of the rest. </p>\\n\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-light\\\" routerLink=\\\"/home/employer\\\">SEND APPLICATION</button>\\n\\n    </div>\\n</div>\\n\\n<div class=\\\"sections\\\">\\n    <div class=\\\"row\\\">\\n        <h2 class=\\\"text-center col-12\\\" style=\\\"margin-bottom: 15px;\\\">\\n            <span class=\\\"underline\\\">Most recent Question Posts</span>\\n        </h2>\\n        <br>\\n        <br>\\n        <div class=\\\"col-4\\\"></div>\\n        <div class=\\\"text-center col-4\\\">\\n            <h5>Title:</h5>\\n            <p>How do I create a for loop? <br></p>\\n            <h5>Description:</h5>\\n            <p>My for loop is not working how do I fix it? <br></p>\\n            <h5>Class:</h5>\\n            <p>CS 1400<br></p>\\n            <h5>Snippit:</h5>\\n           <a  class=\\\"btn btn-primary\\\"  routerLink=\\\"/home/questions\\\">ASK QUESTION</a>\\n            \\n        </div>\\n\\n        <div class=\\\"col-4\\\"></div>\\n    </div>\\n</div>\\n\\n<div class=\\\"colorBar2\\\">\\n    <div class=\\\"row\\\">\\n\\n        <div class=\\\"col-12 text-center\\\">\\n            <h3>\\n                <span class=\\\"underline2\\\">\\n                    Already Registered?\\n                </span>\\n            </h3>\\n        </div>\\n\\n        <div class=\\\"col-12 text-center\\\">\\n            <p>\\n                Login now to add your input to other students questions\\n            </p>\\n        </div>\\n\\n        <div class=\\\"col-12 text-center\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-light\\\">LOGIN</button>\\n        </div>\\n\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Job } from '../models/job';\nimport { JobsService } from '../services/jobs.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private jobList: JobsService) { }\n  jobs: Job[] = []\n\n  ngOnInit(): void {\n      this.jobList.getJobs().subscribe(data => this.jobs = data)\n      //console.log( \"this is jobs\")\n  }\n\n}\n","module.exports = \"<div class=\\\"sections text-center \\\">\\n  <h2> <span class=\\\"underline\\\"> Jobs</span></h2>\\n  <div class=\\\"container-fluid\\\">\\n   <div class=\\\"col-sm-12 text-center\\\">\\n        <jobs-el *ngFor=\\\"let job of jobs\\\" [job]=\\\"job\\\"></jobs-el>\\n    </div>\\n    </div>\\n  \\n    \\n</div>\\n\\n<div class=\\\"row\\\">\\n  <h2 class=\\\"text-center col-12\\\">\\n      <span class=\\\"underline\\\">Most Recent Job Posts</span>\\n  </h2>\\n \\n</div>\\n<br>\\n<br>\\n<div class=\\\"container jobs\\\">\\n  \\n<div class=\\\"row\\\"> \\n    <div class=\\\"col-3\\\"></div>\\n    <div class=\\\" pad-left col-4\\\">\\n        <div >\\n         <h4>Title: </h4>\\n          <p>{{job.title}}</p>\\n          <h4>Company:</h4>\\n          <p>{{job.company_name}}</p>\\n          <h4>Pay:</h4>\\n          <p>{{job.pay}}</p>\\n          <h4>Location:</h4>\\n          <p>{{job.location}}</p>\\n         </div>\\n    </div>\\n    <div class=\\\"col-3 jobpic\\\">\\n        \\n        <h4>Description:</h4>\\n        <p>{{job.description}}</p> \\n       <h4>Date Posted</h4>\\n        <p>{{job.type}}</p>\\n           </div>\\n</div>    \\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 text-center\\\">\\n      <a  href={{job.URL}} target=\\\"_blank\\\"class=\\\"btn cent btn-outline-secondary\\\">APPLY NOW</a>\\n\\n  </div>\\n</div>\\n\\n</div>\\n\"","import {Component, Input} from '@angular/core';\nimport {Job} from '../models/job';\n\n\n\n@Component({\n    selector: 'jobs-el',\n    templateUrl: './job-listing.component.html'\n})\n\nexport class JobComponent {\n    @Input() job: Job\n    expanded : boolean = false\n\n    expandedOrShrink(){\n        this.expanded = !this.expanded\n    }\n  \n  \n      \n\n\n   \n}\n","module.exports = \"<div class=\\\"sections text-center \\\">\\n    <h2> <span class=\\\"underline\\\">Jobs</span></h2>\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"col-sm-12 text-center\\\">\\n            <!-- <jobs-el *ngFor=\\\"let job of jobs\\\" [job]=\\\"job\\\"></jobs-el> -->\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-6\\\" *ngFor=\\\"let job of jobs\\\">\\n                    <div class=\\\"card mb-4 shadow p-3 mb-5 bg-white rounded\\\">\\n                        <div class=\\\"card-header\\\">\\n                            {{ job.title }}\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                        <p class=\\\"card-text\\\">{{ job.company_name }}</p>\\n                                        <p class=\\\"card-text\\\">{{ job.pay }}</p>\\n                                        <p class=\\\"card-text\\\">{{ job.location }}</p>\\n                                        <p class=\\\"card-text\\\">{{ job.type }}</p>\\n                                        <p class=\\\"card-text\\\">{{ job.URL }}</p>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                        <p class=\\\"card-text\\\">{{ job.description }}</p>\\n                                </div>\\n                            </div>\\n                            \\n                            \\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Job } from '../models/job';\nimport { JobsService } from '../services/jobs.service';\n\n@Component({\n    //selector: 'quotes-el',\n    templateUrl: './job-listings.component.html'\n})\n\nexport class JobsComponent implements OnInit {\n\n    constructor(private jobList: JobsService) { }\n    jobs: Job[] = []\n\n    ngOnInit(): void {\n        this.jobList.getJobs().subscribe(data => this.jobs = data)\n        console.log( \"this is jobs\")\n    }\n   \n}","export class Job{\n_id: string\ntitle: string\ndescription: string\ncompany_name: string\npay: string\ntype: string\nURL: string\nlocation: string\n}\n\n","export class PostForum{\n    _id: string\n    title: string\n    questions: string\n    class: string\n    image: string\n    }","export class User {\n    _id : string\n    firstName : string\n    lastName : string\n    email : string\n    username : string\n    password : string\n}","module.exports = \"<h2>Ask Question</h2>\\n<form>\\n  <div class=\\\"form-group row\\\">\\n    <label for=\\\"qtitle\\\" class=\\\"col-sm-2 col-form-label\\\">Question</label>\\n    <div class=\\\"col-sm-10\\\">\\n      <input type=\\\"text\\\" required minlength=\\\"5\\\" maxlength=\\\"60\\\" class=\\\"form-control\\\" name=\\\"title\\\" id=\\\"qtitle\\\" [(ngModel)]=\\\"question.title\\\" #title=\\\"ngModel\\\">\\n      <!-- <div class=\\\"invalid-feedback\\\" [hidden]=\\\"title.valid || title.pristine\\\">\\n        Please enter a title.\\n      </div> -->\\n    </div>\\n  </div>\\n  <div class=\\\"form-group row\\\">\\n    <label for=\\\"qquestion\\\" class=\\\"col-sm-2 col-form-label\\\">Description</label>\\n    <div class=\\\"col-sm-10\\\">\\n      <input type=\\\"text\\\" required class=\\\"form-control\\\" name=\\\"question\\\" id=\\\"qquestion\\\" [(ngModel)]=\\\"question.questions\\\" #question=\\\"ngModel\\\">\\n      <!-- <div class=\\\"invalid-feedback\\\" [hidden]=\\\"company_name.valid || company_name.pristine\\\">\\n        Please ener an author.\\n      </div> -->\\n    </div>\\n  </div>\\n  <div class=\\\"form-group row\\\">\\n    <label for=\\\"qclass\\\" class=\\\"col-sm-2 col-form-label\\\">Class Name</label>\\n    <div class=\\\"col-sm-10\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"class\\\" id=\\\"qclass\\\" [(ngModel)]=\\\"question.class\\\" >\\n      <!-- <div class=\\\"invalid-feedback\\\" >\\n        Please enter a valid URL for the poster.\\n      </div> -->\\n    </div>\\n  </div>\\n  <div class=\\\"form-group row\\\">\\n    <label for=\\\"qimage\\\" class=\\\"col-sm-2 col-form-label\\\">Code Snippit</label>\\n    <div class=\\\"col-sm-10\\\">\\n      <input type=\\\"text\\\" required class=\\\"form-control\\\" name=\\\"image\\\" id=\\\"qimage\\\"  [(ngModel)]=\\\"question.image\\\" #image=\\\"ngModel\\\">\\n      <!-- <div class=\\\"invalid-feedback\\\" [hidden]=\\\"type.valid || type.pristine\\\">\\n        Please enter an isbn\\n      </div> -->\\n    </div>\\n  </div>\\n  \\n\\n\\n  <div class=\\\"form-group row\\\" style=\\\"margin-bottom: 100px;\\\">\\n      <label  for=\\\"\\\" class=\\\"col-sm-2 col-form-label\\\"></label>\\n      <div class=\\\"col-sm-10\\\" >\\n        <button type=\\\"submit\\\" (click)=\\\"onSubmit(question)\\\" class=\\\"btn btn-primary\\\" >Submit</button>&nbsp;\\n        <button class=\\\"btn btn-secondary\\\" routerLink=\\\"/home\\\">Cancel</button>\\n      </div>\\n    </div>\\n</form>\"","import { Component, OnInit, Output } from '@angular/core';\nimport { PostForum } from '../models/question';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { EventEmitter } from 'events';\nimport { QuestionsService } from '../services/questions.service';\n\n@Component({\n  templateUrl: './question-form.component.html'\n})\nexport class QuestionFormComponent implements OnInit {\n  question: PostForum = new PostForum()\n  //job: Job = new Job()\n  //@Output() createJob= new EventEmitter<Job>();\n  constructor(private questionsService: QuestionsService, \n    private route : ActivatedRoute, \n    private router : Router, private toastr : ToastrService) { }\n\n  ngOnInit() {\n    let bid = this.route.snapshot.params['id']\n    if(bid !== undefined){\n      this.questionsService.getQuestion(bid).subscribe( orig => Object.assign(this.question, orig))\n    }\n  }\n  onSubmit(question: PostForum): void {\n    this.questionsService.createQuestion(question).subscribe(res => {\n      console.log(question)\n      //this.createJob.emit(job);\n    });\n  }\n\n \n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3F1ZXN0aW9uLWZvcnVtL3F1ZXN0aW9uLWZvcnVtLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n  <div class=\\\"sections\\\">\\n    <div class=\\\"row\\\">\\n        <h2 class=\\\"text-center col-12\\\" style=\\\"margin-bottom: 15px;\\\">\\n            <span class=\\\"underline\\\">Most recent Question Posts</span>\\n        </h2>\\n        <br>\\n        <br>\\n        <div class=\\\"col-4\\\"></div>\\n        <div class=\\\"text-center col-4\\\">\\n            <h5>Title:</h5>\\n            <p>How do I create a for loop? <br></p>\\n            <h5>Description:</h5>\\n            <p>My for loop is not working how do I fix it? <br></p>\\n            <h5>Class:</h5>\\n            <p>CS 1400<br></p>\\n            <h5>Snippit:</h5>\\n            <p> <br></p>\\n        </div>\\n\\n        <div class=\\\"col-4\\\"></div>\\n    </div>\\n\\n\\n    <div class=\\\"row\\\">\\n  \\n      <div class=\\\"col-4\\\"></div>\\n      <div class=\\\"text-center col-4\\\">\\n          <h5>Title:</h5>\\n          <p>How do I create a for loop? <br></p>\\n          <h5>Description:</h5>\\n          <p>My for loop is not working how do I fix it? <br></p>\\n          <h5>Class:</h5>\\n          <p>CS 1400<br></p>\\n          <h5>Snippit:</h5>\\n          <p> <br></p>\\n      </div>\\n\\n      <div class=\\\"col-4\\\"></div>\\n  </div>\\n\\n\\n\\n  <div class=\\\"row\\\">\\n    <\\n    <div class=\\\"col-4\\\"></div>\\n    <div class=\\\"text-center col-4\\\">\\n        <h5>Title:</h5>\\n        <p>How do I create a for loop? <br></p>\\n        <h5>Description:</h5>\\n        <p>My for loop is not working how do I fix it? <br></p>\\n        <h5>Class:</h5>\\n        <p>CS 1400<br></p>\\n        <h5>Snippit:</h5>\\n        <p> <br></p>\\n    </div>\\n\\n    <div class=\\\"col-4\\\"></div>\\n</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-question-forum',\n  templateUrl: './question-forum.component.html',\n  styleUrls: ['./question-forum.component.css']\n})\nexport class QuestionForumComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable()\nexport class AuthenticationGaurd implements CanActivate{\n    constructor(private router: Router){}\n    canActivate(route : ActivatedRouteSnapshot, state: RouterStateSnapshot ): boolean {\n        if(AuthenticationService.isAuthenticated()){\n            return true\n        }else{\n            this.router.navigate(['/login'])\n            return false\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { User } from '../models/user';\nimport {map} from 'rxjs/operators';\n//import { BEST_SELLERS } from '../models/books';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nconst httpHeaders = {\n  headers: new HttpHeaders({'content-type': 'application/json'})\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  \n\nconstructor(private http : HttpClient){}\n\nstatic isAuthenticated(): boolean{\n  return localStorage.getItem('auth-token') !== null\n}\n\n\n  register(user: User): any {\n  //todo \n   return this.http.post<User>('http://localhost:8080/api/users/register', user, httpHeaders)\n  }\n\n  login(user: User): any {\n    //todo\n  let res = this.http.post(`http://localhost:8080/api/users/login`, user, httpHeaders)\n\n  return res.pipe(\n    map(data => {\n      if(data['token']){\n        localStorage.setItem('auth-token', data['token'])\n        return true //success login\n      }else{\n        return false //unable to login\n      }\n    })\n  )\n  }\n\n  logout(): void{\n    //todo\n    localStorage.removeItem('auth-token')\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Job } from '../models/job';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nconst httpHeaders = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobsService {\n  constructor(private http : HttpClient){}\n  getJob(id: string): Observable<Job> {\n    return this.http.get<Job>(`http://localhost:8080/api/jobs/${id}`, httpHeaders)\n  }\n\n  getJobs(): Observable<Array<Job>> {\n    return this.http.get<Array<Job>>('http://localhost:8080/api/jobs', httpHeaders)\n  }\n\n  createJob(job: Job): Observable<any> {\n    console.log('Service call:', job)\n    return this.http.post<Job>('http://localhost:8080/api/jobs/create', job, httpHeaders)\n  }\n\n  updateJob(job: Job): any {\n    return this.http.put<Job>(`http://localhost:8080/api/jobs/${job._id}/update`, job, httpHeaders)\n  }\n\n  deleteJob(job: Job): any {\n    return this.http.delete<Job>(`http://localhost:8080/api/jobs/${job._id}/delete`, httpHeaders)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { PostForum } from '../models/question';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nconst httpHeaders = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionsService {\n  constructor(private http : HttpClient){}\n  getQuestion(id: string): Observable<PostForum> {\n    return this.http.get<PostForum>(`http://localhost:8080/api/post_forums/${id}`, httpHeaders)\n  }\n\n  getQuestions(): Observable<Array<PostForum>> {\n    return this.http.get<Array<PostForum>>('http://localhost:8080/api/post_forums', httpHeaders)\n  }\n\n  createQuestion(question: PostForum): Observable<any> {\n    console.log('Service call:', question)\n    return this.http.post<PostForum>('http://localhost:8080/api/post_forums/create', question, httpHeaders)\n  }\n\n  updateJob(question: PostForum): any {\n    return this.http.put<PostForum>(`http://localhost:8080/api/post_forums/${question._id}/update`,question, httpHeaders)\n  }\n\n  deleteJob(question: PostForum): any {\n    return this.http.delete<PostForum>(`http://localhost:8080/api/post_forums/${question._id}/delete`, httpHeaders)\n  }\n}\n","module.exports = \"<div class=\\\"row\\\">\\n    <h2 class=\\\"text-center col-12\\\">\\n       <span class=\\\"underline\\\">Login</span>\\n    </h2>\\n    <br>\\n    <br>\\n    <br>\\n    <div class=\\\"text-center col-3\\\"></div>\\n    <div class=\\\"text-center col-6\\\">\\n    <form #f=\\\"ngForm\\\" (ngSubmit)=\\\" onSubmit(f)\\\" [ngClass]=\\\"{'was-validated' : !f.valid && !f.pristine}\\\">\\n        <div class=\\\"form-group row text-center\\\">\\n          \\n          <!-- <label for=\\\"username\\\" class=\\\"col-sm-2 col-form-label\\\" >Username</label> -->\\n        \\n            <input placeholder=\\\"username\\\" type=\\\"text\\\" required minlength=\\\"1\\\" maxlength=\\\"10\\\"  class=\\\"form-control\\\" name=\\\"username\\\" id=\\\"username\\\" [(ngModel)]=\\\"user.username\\\" #username=\\\"ngModel\\\">\\n          <div class=\\\"invalid-feedback\\\" [hidden]=\\\"username.valid || username.pristine\\\">\\n            please add a username\\n          </div>\\n         \\n        </div>\\n        <div class=\\\"form-group row text-center\\\">\\n         \\n            <!-- <label for=\\\"password\\\" class=\\\"col-sm-2 col-form-label\\\" >Password</label> -->\\n           \\n         \\n              <input placeholder=\\\"password\\\" type=\\\"password\\\" required minlength=\\\"1\\\" class=\\\"form-control\\\" name=\\\"password\\\" id=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" #password=\\\"ngModel\\\">\\n              <div class=\\\"invalid-feedback\\\" [hidden]=\\\"password.valid || password.pristine\\\">\\n                please add a password\\n              </div>\\n           \\n          </div>\\n                <div class=\\\"form-group row\\\">\\n                   \\n                    <div class=\\\"col-sm-12 text-center\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button> &nbsp;\\n                    <button class=\\\"btn btn-danger\\\" routerLink=\\\"/home\\\">Cancel</button>&nbsp;\\n                    <button type=\\\"submit\\\" routerLink=\\\"/register\\\" class=\\\"btn btn-primary\\\">Register</button> &nbsp;\\n  \\n                    </div>\\n                  </div>\\n      </form>\\n     \\n      </div>\\n      </div>\\n\"","import { Component } from \"@angular/core\";\nimport { User } from '../models/user';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'login-el',\n    templateUrl: './login-form.component.html'\n})\nexport class LoginFormComponent {\n    user: User = new User()\n\n    constructor(private toastr: ToastrService, \n        private authService: AuthenticationService,\n        private router : Router){}\n        \n    onSubmit(f: NgForm) {\n        if (f.valid) {\n            this.authService.login(this.user).subscribe(res => {\n                this.toastr.success(\"Successfully logged in.\")\n                this.router.navigate(['/home'])\n            }, error => {\n                this.toastr.error('Unable to log in! Contact admin.')\n            })\n\n           \n        } else {\n            for (let c in f.controls) {\n                f.controls[c].markAsDirty()\n            }\n        }\n    }\n}","module.exports = \"<div class=\\\"row\\\">\\n        <h2 class=\\\"text-center col-12\\\">\\n           <span class=\\\"underline\\\">Register</span>\\n        </h2>\\n        <br>\\n        <br>\\n        <br>\\n        <div class=\\\"text-center col-3\\\"></div>\\n        <div class=\\\"text-center col-6\\\">\\n<form #f=\\\"ngForm\\\" (ngSubmit)=\\\" onSubmit(f)\\\" [ngClass]=\\\"{'was-validated' : !f.valid && !f.pristine}\\\">\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"firstName\\\" class=\\\"col-sm-2 col-form-label\\\"></label>\\n       \\n            <input placeholder=\\\"First Name\\\" type=\\\"text\\\" required minlength=\\\"1\\\" class=\\\"form-control\\\" name=\\\"firstName\\\" id=\\\"firstName\\\"\\n                [(ngModel)]=\\\"user.firstName\\\" #firstName=\\\"ngModel\\\">\\n            <div class=\\\"invalid-feedback\\\" [hidden]=\\\"firstName.valid || firstName.pristine\\\">\\n                please add first Name\\n           </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"LastName\\\" class=\\\"col-sm-2 col-form-label\\\"></label>\\n\\n            <input placeholder=\\\"Last Name\\\" type=\\\"text\\\" required minlength=\\\"1\\\" class=\\\"form-control\\\" name=\\\"LastName\\\" id=\\\"LastName\\\"\\n                [(ngModel)]=\\\"user.LastName\\\" #LastName=\\\"ngModel\\\">\\n            <div class=\\\"invalid-feedback\\\" [hidden]=\\\"LastName.valid || LastName.pristine\\\">\\n                please add Last Name\\n            </div>\\n        \\n    </div>\\n\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"username\\\" class=\\\"col-sm-2 col-form-label\\\"></label>\\n       \\n            <input placeholder=\\\"User Name\\\" type=\\\"text\\\" required minlength=\\\"1\\\" maxlength=\\\"60\\\" class=\\\"form-control\\\" name=\\\"username\\\" id=\\\"username\\\"\\n                [(ngModel)]=\\\"user.username\\\" #username=\\\"ngModel\\\">\\n            <div class=\\\"invalid-feedback\\\" [hidden]=\\\"username.valid || username.pristine\\\">\\n                please add a username\\n         \\n        </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"email\\\" class=\\\"col-sm-2 col-form-label\\\"></label>\\n       \\n            <input placeholder=\\\"Email\\\" type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" id=\\\"email\\\"\\n                [(ngModel)]=\\\"user.email\\\" #email=\\\"ngModel\\\">\\n            <div class=\\\"invalid-feedback\\\" [hidden]=\\\"email.valid || email.pristine\\\">\\n                please add an email\\n            </div>\\n        \\n    </div>\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"password\\\" class=\\\"col-sm-2 col-form-label\\\"></label>\\n       \\n            <input placeholder=\\\"Password\\\" type=\\\"password\\\" required minlength=\\\"1\\\" class=\\\"form-control\\\" name=\\\"password\\\" id=\\\"password\\\"\\n                [(ngModel)]=\\\"user.password\\\" #password=\\\"ngModel\\\">\\n            <div class=\\\"invalid-feedback\\\" [hidden]=\\\"password.valid || password.pristine\\\">\\n                please add a password\\n            </div>\\n      \\n    </div>\\n    <div class=\\\"form-group row\\\">\\n                   \\n            <div class=\\\"col-sm-12 text-center\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button> &nbsp;\\n            <button class=\\\"btn btn-danger\\\" routerLink=\\\"/home\\\">Cancel</button>&nbsp;\\n            <button  routerLink=\\\"/login\\\" class=\\\"btn btn-primary\\\">Login</button> &nbsp;\\n\\n            </div>\\n          </div>\\n</form>\\n</div>\\n</div>\\n\\n\"","import { Component } from \"@angular/core\";\nimport { User } from '../models/user';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    templateUrl: './register-form.component.html'\n})\nexport class RegisterFormComponent {\n    user: User = new User()\n\n    constructor(private toastr: ToastrService, \n        private authService: AuthenticationService,\n        private router : Router){}\n\n    onSubmit(f: NgForm) {\n        if (f.valid) {\n           this.authService.register(this.user).subscribe(res => {\n               this.toastr.success(\"Successfully registered.\")\n               this.router.navigate(['/home'])\n           }, error => {\n               this.toastr.error('Unable to register! Contact admin.')\n           })\n           \n        } else {\n            for (let c in f.controls) {\n                f.controls[c].markAsDirty()\n            }\n            this.toastr.error(\"Validation errors. Please fix and try again!\")\n        }\n    }\n}","module.exports = \"<nav class=\\\"navbar top \\\">\\n    <ul class=\\\"navbar-nav ml-auto\\\" style=\\\"display: inline; margin-right: 20px;\\\">\\n        <ng-template [ngIf]=\\\"notLoggedIn\\\">\\n            <li class=\\\"nav-item\\\">\\n                <a href=\\\"/register\\\" class=\\\"nav-link\\\">Register</a> &nbsp; | &nbsp;\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n                <a href=\\\"/login\\\" class=\\\"nav-link\\\">Login</a>\\n            </li>\\n        </ng-template>\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"loggedIn\\\">\\n            Welcome! &nbsp; | &nbsp;\\n        </li>\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"loggedIn\\\">\\n            <a  class=\\\"nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\n        </li>\\n    </ul>\\n  </nav> \\n\\n  <!-- <ng-template [ngIf]=\\\"notLoggedIn\\\">\\n    <li class=\\\"nav-item\\\">\\n        <a href=\\\"/register\\\" class=\\\"nav-link\\\">Register</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n        <a href=\\\"/login\\\" class=\\\"nav-link\\\">Login</a>\\n    </li>\\n</ng-template>\\n<li class=\\\"nav-item\\\" *ngIf=\\\"loggedIn\\\">\\n    <a  class=\\\"nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\n</li> -->\"","import {Component} from \"@angular/core\"\nimport { BaseComponent } from '../base.component';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { Router } from '@angular/router';\n\n\n\n\n@Component({\n    selector: 'auth-el',\n    templateUrl: './user.component.html'\n})\n\nexport class UserComponent extends BaseComponent{\n    constructor (private authService : AuthenticationService, private router : Router){super()}\n    logout(){\n        this.authService.logout()\n        this.router.navigate(['/'])\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}